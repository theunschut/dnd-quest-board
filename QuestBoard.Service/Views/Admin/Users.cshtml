@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model IEnumerable<QuestBoard.Service.ViewModels.AdminViewModels.UserManagementViewModel>

@{
    var tokens = Antiforgery.GetAndStoreTokens(ViewContext.HttpContext);
}

<div class="card modern-card">
    <div class="card-header modern-card-header">
        <h2 class="mb-0">
            <i class="fas fa-users-cog text-danger me-2"></i>
            User Management
        </h2>
    </div>
    <div class="card-body modern-card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">Email</th>
                            <th scope="col">Current Role</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
        <tbody>
            @foreach (var userModel in Model)
            {
                <tr>
                    <td>
                        <i class="fas fa-user text-muted me-2"></i>
                        @userModel.User.Name
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(userModel.User.Email))
                        {
                            <a href="mailto:@userModel.User.Email" class="email-link">@userModel.User.Email</a>
                        }
                        else
                        {
                            <span class="text-muted fst-italic">No email provided</span>
                        }
                    </td>
                    <td>
                        @if (userModel.IsAdmin)
                        {
                            <span class="badge bg-danger">
                                <i class="fas fa-shield-alt me-1"></i>
                                Administrator
                            </span>
                        }
                        else if (userModel.IsDungeonMaster)
                        {
                            <span class="badge bg-warning">
                                <i class="fas fa-crown me-1"></i>
                                Dungeon Master
                            </span>
                        }
                        else if (userModel.IsPlayer)
                        {
                            <span class="badge bg-primary">
                                <i class="fas fa-dice-d20 me-1"></i>
                                Player
                            </span>
                        }
                    </td>
                    <td class="text-end">
                        @* Role management buttons - promote first *@
                        @if (userModel.IsDungeonMaster)
                        {
                            @* DM can be promoted to Admin (one level up) *@
                            <form asp-action="PromoteToAdmin" method="post" class="d-inline me-2">
                                <input type="hidden" name="userId" value="@userModel.User.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">
                                    <i class="fas fa-arrow-up me-1"></i>
                                    Promote to Admin
                                </button>
                            </form>
                        }
                        else if (userModel.IsPlayer)
                        {
                            @* Player can only be promoted to DM (one level up) *@
                            <form asp-action="PromoteToDM" method="post" class="d-inline me-2">
                                <input type="hidden" name="userId" value="@userModel.User.Id" />
                                <button type="submit" class="btn btn-sm btn-warning">
                                    <i class="fas fa-arrow-up me-1"></i>
                                    Promote to DM
                                </button>
                            </form>
                        }
                        
                        @* Demote buttons second *@
                        @if (userModel.IsAdmin)
                        {
                            @* Admin can only be demoted to DM (one level down) *@
                            <form asp-action="DemoteFromAdmin" method="post" class="d-inline me-2">
                                <input type="hidden" name="userId" value="@userModel.User.Id" />
                                <button type="submit" class="btn btn-sm btn-warning">
                                    <i class="fas fa-arrow-down me-1"></i>
                                    Demote to DM
                                </button>
                            </form>
                        }
                        else if (userModel.IsDungeonMaster)
                        {
                            @* DM can be demoted to Player (one level down) *@
                            <form asp-action="DemoteToPlayer" method="post" class="d-inline me-2">
                                <input type="hidden" name="userId" value="@userModel.User.Id" />
                                <button type="submit" class="btn btn-sm btn-primary">
                                    <i class="fas fa-arrow-down me-1"></i>
                                    Demote to Player
                                </button>
                            </form>
                        }
                        
                        @* Edit User button - third *@
                        <a asp-action="EditUser" asp-route-userId="@userModel.User.Id" class="btn btn-sm btn-info me-2">
                            <i class="fas fa-edit me-1"></i>
                            Edit
                        </a>
                        
                        @* Delete User button - last *@
                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteUser(@userModel.User.Id)">
                            <i class="fas fa-trash"></i>
                            Delete
                        </button>
                    </td>
                </tr>
            }
                </tbody>
            </table>
        </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                <p class="text-muted">No users found.</p>
            </div>
        }
    </div>
</div>

<script>
    function deleteUser(id) {
        if (confirm("Are you sure you want to delete this user? This action cannot be undone.")) {
            fetch(`/Admin/DeleteUser/${id}`, {
                method: "DELETE",
                headers: {
                    'RequestVerificationToken': '@tokens.RequestToken'
                }
            }).then(res => {
                if (res.ok) {
                    location.reload();
                } else {
                    alert("Delete failed.");
                }
            });
        }
    }
</script>