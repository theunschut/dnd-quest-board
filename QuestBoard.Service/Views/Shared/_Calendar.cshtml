@model CalendarViewModel
@{
    var isDetailsPage = ViewBag.IsDetailsPage == true;
    var isManagePage = ViewBag.IsManagePage == true;
    var currentQuestId = ViewBag.CurrentQuestId as int?;
}

<div class="calendar-grid @(isDetailsPage ? "details-page" : "") @(isManagePage ? "manage-page" : "") details-calendar-container @(isManagePage ? "manage-page" : "")">
    <!-- Calendar Header -->
    <div class="calendar-header">
        <div class="calendar-day-header">Monday</div>
        <div class="calendar-day-header">Tuesday</div>
        <div class="calendar-day-header">Wednesday</div>
        <div class="calendar-day-header">Thursday</div>
        <div class="calendar-day-header">Friday</div>
        <div class="calendar-day-header">Saturday</div>
        <div class="calendar-day-header">Sunday</div>
    </div>
    
    <!-- Calendar Days -->
    <div class="calendar-body">
        @foreach (var day in Model.GetCalendarDays())
        {
            <div class="calendar-day @(day.IsEmpty ? "empty" : "") @(day.Date.Date == DateTime.Today ? "today" : "")">
                @if (!day.IsEmpty)
                {
                    <div class="day-number">@day.Day</div>
                    
                    @if (day.QuestsOnDay.Any())
                    {
                        <div class="quest-events">
                            @foreach (var questOnDay in day.QuestsOnDay.Take(3))
                            {
                                <div class="quest-event @(questOnDay.IsFinalized ? "finalized" : "proposed") @(isDetailsPage && questOnDay.Quest.Id == currentQuestId ? "current-quest" : "")" 
                                     title="@questOnDay.Quest.Title - @questOnDay.ProposedDate.Date.ToString("HH:mm")"
                                     data-quest-id="@questOnDay.Quest.Id"
                                     data-proposed-date-id="@questOnDay.ProposedDate.Id"
                                     data-is-details-page="@isDetailsPage.ToString().ToLower()">
                                    <a href="@Url.Action("Details", "Quest", new { id = questOnDay.Quest.Id })" 
                                       class="quest-link">
                                        <div class="calendar-quest-title">@questOnDay.Quest.Title</div>
                                        <div class="calendar-quest-dm">@questOnDay.Quest.DungeonMaster?.Name</div>
                                        <div class="quest-time">@questOnDay.ProposedDate.Date.ToString("HH:mm")</div>
                                        @{
                                            var dmHasKey = questOnDay.Quest.DungeonMaster?.HasKey == true;
                                            var playersHaveKey = questOnDay.Quest.PlayerSignups?.Any(ps => ps.Player.HasKey == true) == true;
                                            var anyoneHasKey = dmHasKey || playersHaveKey;
                                        }
                                        @if (!anyoneHasKey)
                                        {
                                            <i class="fas fa-exclamation-triangle text-warning warning-icon" title="No building key available"></i>
                                        }
                                        else if (questOnDay.IsFinalized)
                                        {
                                            <i class="fas fa-check-circle finalized-icon"></i>
                                        }
                                    </a>
                                    
                                    @* Vote buttons and vote display for details page *@
                                    @if (isDetailsPage && questOnDay.Quest.Id == currentQuestId)
                                    {
                                        var currentUserId = ViewBag.CurrentUserId;
                                        var userVote = questOnDay.ProposedDate.PlayerVotes?.FirstOrDefault(v => v.PlayerSignup?.Player?.Id == currentUserId)?.Vote;
                                        var isPlayerSignedUp = ViewBag.IsPlayerSignedUp;
                                        
                                        @if (!questOnDay.IsFinalized && !(bool)isPlayerSignedUp)
                                        {
                                            @* Vote buttons for non-signed up users *@
                                            <div class="vote-buttons" style="display: none;">
                                                <div class="btn-group-vertical" role="group">
                                                    <button type="button" class="btn btn-sm vote-btn @(userVote == VoteType.Yes ? "btn-success" : "btn-outline-success")" 
                                                            data-vote="yes" data-proposed-date-id="@questOnDay.ProposedDate.Id">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm vote-btn @(userVote == VoteType.Maybe ? "btn-warning" : "btn-outline-warning")" 
                                                            data-vote="maybe" data-proposed-date-id="@questOnDay.ProposedDate.Id">
                                                        <i class="fas fa-question"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm vote-btn @(userVote == VoteType.No ? "btn-danger" : "btn-outline-danger")" 
                                                            data-vote="no" data-proposed-date-id="@questOnDay.ProposedDate.Id">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        }
                                        else if ((bool)isPlayerSignedUp)
                                        {
                                            @* Show user's vote for signed up users *@
                                            <div class="user-vote-display">
                                                @{
                                                    var voteIcon = userVote switch
                                                    {
                                                        VoteType.Yes => "fas fa-check-circle text-success",
                                                        VoteType.Maybe => "fas fa-question-circle text-warning", 
                                                        VoteType.No => "fas fa-times-circle text-danger",
                                                        _ => "fas fa-circle text-muted"
                                                    };
                                                    var voteText = userVote switch
                                                    {
                                                        VoteType.Yes => "Yes",
                                                        VoteType.Maybe => "Maybe",
                                                        VoteType.No => "No",
                                                        _ => "No Vote"
                                                    };
                                                }
                                                <div class="vote-indicator" title="Your vote: @voteText">
                                                    <i class="@voteIcon"></i>
                                                </div>
                                            </div>
                                        }
                                        else if (isManagePage && questOnDay.Quest.Id == currentQuestId)
                                        {
                                            @* Vote summary for manage page *@
                                            <div class="manage-vote-display">
                                                @{
                                                    var allVotes = questOnDay.ProposedDate.PlayerVotes ?? new List<PlayerDateVote>();
                                                    var yesVotes = allVotes.Where(v => v.Vote == VoteType.Yes).ToList();
                                                    var maybeVotes = allVotes.Where(v => v.Vote == VoteType.Maybe).ToList();
                                                    var noVotes = allVotes.Where(v => v.Vote == VoteType.No).ToList();
                                                    var totalVotes = yesVotes.Count + maybeVotes.Count + noVotes.Count;
                                                }
                                                
                                                @* Option 1: Vote Count Badges *@
                                                <div class="vote-badges">
                                                    @if (yesVotes.Any())
                                                    {
                                                        <span class="badge bg-success vote-badge" title="Yes: @string.Join(", ", yesVotes.Select(v => v.PlayerSignup?.Player.Name))">
                                                            âœ“ @yesVotes.Count
                                                        </span>
                                                    }
                                                    @if (maybeVotes.Any())
                                                    {
                                                        <span class="badge bg-warning vote-badge" title="Maybe: @string.Join(", ", maybeVotes.Select(v => v.PlayerSignup?.Player.Name))">
                                                            ? @maybeVotes.Count
                                                        </span>
                                                    }
                                                    @if (noVotes.Any())
                                                    {
                                                        <span class="badge bg-danger vote-badge" title="No: @string.Join(", ", noVotes.Select(v => v.PlayerSignup?.Player.Name))">
                                                            âœ— @noVotes.Count
                                                        </span>
                                                    }
                                                    @if (totalVotes == 0)
                                                    {
                                                        <span class="badge bg-secondary vote-badge" title="No votes yet">
                                                            No votes
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            }
                            @if (day.QuestsOnDay.Count > 3)
                            {
                                <div class="more-events">+@(day.QuestsOnDay.Count - 3) more</div>
                            }
                        </div>
                    }
                }
            </div>
        }
    </div>
</div>